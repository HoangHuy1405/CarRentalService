@* _LoginPartial.cshtml *@
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject CarRental.Services.NotificationService NotificationService

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var userId = UserManager.GetUserId(User);
        var unreadCount = await NotificationService.GetUnreadNotificationCount(userId);
        var user = await UserManager.GetUserAsync(User);
        var userMoney = user?.Money ?? 0; // Get user's money or default to 0

        <li class="nav-item">
            <a class="nav-link text-dark">
                <i class="fas fa-wallet"></i> @userMoney.ToString("C")
            </a>
        </li>

        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="notificationDropdown" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-bell"></i>
                @if (unreadCount > 0)
                {
                    <span class="badge badge-danger" id="notification-count">@unreadCount</span>
                }
            </a>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="notificationDropdown" id="notification-menu">
                @* Placeholder for notifications - will be loaded via AJAX *@
                <a class="dropdown-item" href="#">Loading notifications...</a>
            </div>
        </li>

        <li class="nav-item dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="fas fa-user-circle"></i> Hello @User.Identity?.Name!
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <li><a class="dropdown-item" asp-controller="ApplicationUser" asp-action="ChangePassword"><i class="fas fa-key"></i> Change password</a></li>
                <li><a class="dropdown-item" asp-controller="ApplicationUser" asp-action="Profile"><i class="fas fa-user"></i> Profile</a></li>

                @if (User.IsInRole("Admin"))
                {
                    <li><a class="dropdown-item" asp-controller="Admin" asp-action="Approve"><i class="fas fa-person"></i> Approval</a></li>
                }
                <li>
                    <form class="form-inline dropdown-item" method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="dropdown-item btn btn-link text-dark">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </form>
                </li>
            </ul>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>