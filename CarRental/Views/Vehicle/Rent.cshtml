@model Rental
@{
    ViewBag.Title = "Rent Car";
}

<style>
    .custom-card {
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .price-label {
        font-size: 0.9rem;
        color: #6c757d; /* Muted text color */
    }

    .price-value {
        font-size: 1.1rem;
        font-weight: bold;
    }

    .section-title {
        font-size: 1.2rem;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    .highlight-box {
        background-color: #f8f9fa; /* Light gray background */
        border: 1px solid #ddd; /* Subtle border */
        padding: 10px;
        border-radius: 5px; /* Rounded corners */
        margin-bottom: 15px; /* Space between the box and other elements */
    }

    .insurance-info {
        background-color: #e9f8ee; /* Light green background */
        border: 1px solid #a3d9b5; /* Green border */
        color: #155724; /* Dark green text */
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }

        .insurance-info i {
            color: #28a745; /* Green icon */
            margin-right: 5px;
        }

    .additional-fee-info {
        border: 1px solid #ced4da;
        padding: 15px;
        border-radius: 10px;
    }

    .fee-item {
        margin-bottom: 10px;
    }

        .fee-item h6 {
            font-weight: 600;
        }

        .fee-item p {
            margin-bottom: 0;
            font-size: 0.9rem;
            color: #6c757d;
        }

        .fee-item .fee-value {
            font-weight: bold;
            font-size: 0.9rem;
        }

    .insurance-header {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .insurance-icon {
        background-color: #e9f8ee; /* Light green background */
        color: #28a745; /* Green icon color */
        border: 1px solid #a3d9b5; /* Green border */
        border-radius: 50%; /* Circular shape */
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center; /* Center vertically */
        justify-content: center; /* Center horizontally */
        margin-right: 10px;
    }

    .insurance-title {
        font-weight: bold;
        font-size: 1.1rem;
    }
</style>

<form asp-controller="Vehicle" asp-action="Rent" method="post">
    <input type="hidden" asp-for="totalFee" id="totalFeeInput" />
    <input type="hidden" asp-for="depositFee" id="depositFeeInput" />
    <input type="hidden" asp-for="RentalVehicleID" />
    <div class="row">
        <div class="col-md-7">

            <div class="mb-3">
                <div class="card custom-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="mb-0">Pick-up</h6>
                                <input id="startDate" asp-for="StartDate" class="form-control" type="date" min="1990" max="2100" />
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                            </div>
                            <div>
                                <h6 class="mb-0">Drop-off</h6>
                                <input id="endDate" asp-for="EndDate" class="form-control" type="date" min="1990" max="2100" />
                                <span asp-validation-for="EndDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="mt-3">
                            <i class="bi bi-geo-alt"></i>
                            <span id="ownerSupportText" class="text-muted"></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <div class="card custom-card">
                    <div class="card-body">
                        <h6 class="section-title">Pick-up & Drop-off Location</h6>
                        <input asp-for="PickUpLocation" class="form-control" />
                        <span asp-validation-for="PickUpLocation" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <div class="card custom-card">
                    <div class="card-body">
                        <h6 class="section-title">Rental Price</h6>
                        <div class="d-flex justify-content-between">
                            <span id="rent-fee" class="price-label">Rental Price</span>
                            <span id="rent-fee-value" class="price-value"></span>
                        </div>
                        <hr />
                        <div class="insurance-info">
                            <div class="insurance-header">
                                <div class="insurance-icon">
                                    <i class="bi bi-shield-check"></i>
                                </div>
                                <span class="insurance-title">Rental Insurance</span>
                            </div>
                            <p>
                                Rental Insurance Included. In case of an accident, the renter is responsible for a maximum of 2,000,000 VND.
                            </p>
                            <a href="#">View details</a>
                        </div>

                        <h6 class="section-title">Additional Insurance</h6>
                        <div class="insurance-info">
                            <div class="insurance-header">
                                <div class="insurance-icon">
                                    <i class="bi bi-shield-check"></i>
                                </div>
                                <span class="insurance-title">Occupant Insurance</span>
                                <span id="insurance-fee-value" class="price-value" style="margin-left: auto;"></span>
                            </div>
                            <p>
                                In case of an unforeseen incident, the driver and passengers are insured up to 300,000,000 VND per person.
                            </p>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="" id="additionalInsuranceCheck">
                                <label class="form-check-label" for="additionalInsuranceCheck">
                                    Add Occupant Insurance
                                </label>
                            </div>
                            <a href="#">View details</a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <div class="card custom-card">
                    <div class="card-body">
                        <h6 class="section-title">Additional Fees</h6>
                        <div class="additional-fee-info">
                            <div class="fee-item">
                                <div class="d-flex justify-content-between">
                                    <h6><i class="bi bi-dash-circle me-1"></i>Mileage Limit Fee</h6>
                                    <span class="fee-value">Not applicable</span>
                                </div>
                            </div>
                            <div class="fee-item">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h6><i class="bi bi-dash-circle me-1"></i>Late Return Fee</h6>
                                        <p>Additional fee if the car is returned late. If delayed by more than 4 hours, an additional 1 day rental fee will be charged.</p>
                                    </div>
                                    <span class="fee-value"></span>
                                </div>
                            </div>
                            <div class="fee-item">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h6><i class="bi bi-dash-circle me-1"></i>Cleaning Fee</h6>
                                        <p>Fee applies if the returned car is not clean (excessive dirt, sand, mud, etc.).</p>
                                    </div>
                                    <span class="fee-value">120,000 VND</span>
                                </div>
                            </div>
                            <div class="fee-item">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h6><i class="bi bi-dash-circle me-1"></i>Odor Removal Fee</h6>
                                        <p>Fee applies if the returned car has an unpleasant odor (cigarette smell, strong food smell, etc.).</p>
                                    </div>
                                    <span class="fee-value">200,000 VND</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="col-md-5">
            <div class="card custom-card">
                <div class="card-body">
                    <h6 class="section-title">Total</h6>
                    <div class="d-flex justify-content-between mb-3">
                        <span id="total-fee-label" class="price-label">Total</span>
                        <span id="total-fee-value" class="price-value"></span>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span id="rental-insurance-fee-label" class="price-label">Car Rental Insurance</span>
                        <span id="rental-insurance-fee-value" class="price-value"></span>
                    </div>
                    <div class="d-flex justify-content-between mb-3" id="occupant-insurance-row" style="display: none;">
                        <span id="occupant-insurance-fee-label" class="price-label">Occupant Insurance</span>
                        <span id="occupant-insurance-fee-value" class="price-value"></span>
                    </div>
                    <hr />

                    <div class="d-flex justify-content-between">
                        <h6 class="mb-0">Amount Due</h6>
                        <h5 id="final-price" class="text-success fw-bold">0 ₫</h5>
                    </div>

                    <button class="btn btn-success w-100 mt-3" type="submit">
                        <i class="bi bi-bag-check"></i> Rent
                    </button>
                </div>
            </div>
        </div>
    </div>
    <span id="check-valid" class="alert-warning"></span>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script>
        let apiData;

        async function fetchRentalDataFee(rentalVehicleId) {
            try {
                const response = await fetch(`/api/rentalvehicles/${rentalVehicleId}`);
                if (!response.ok) {
                    const errorData = await response.json();
                    console.error(errorData.Message);
                    return null;
                }
                const data = await response.json();
                apiData = data;
                console.log('Vehicle Data:', data);
                // Update UI with fetched data
                displayData(data);
                updateDaysDifference();

                return data;
            } catch (error) {
                console.error('Error fetching rental data:', error);
            }
        }

        // Call the function with the current Rental model's IDs
        const rentalVehicleId = @Model.RentalVehicleID;
        fetchRentalDataFee(rentalVehicleId);

        function displayData(data) {
            document.getElementById("ownerSupportText").textContent = `Car owner supports hourly rentals. Learn more`;

            document.getElementById("rent-fee-value").textContent = `${data.feePerDay.toLocaleString()} ₫/ day`;

            document.getElementById("insurance-fee-value").textContent = `2$/ day`;

            document.getElementById("total-fee-label").textContent = `Total`;

            document.getElementById("rental-insurance-fee-label").textContent = `Car Rental Insurance`;
            document.getElementById("rental-insurance-fee-value").textContent = `5$`;

        }

        document.addEventListener("DOMContentLoaded", function () {
            const startDateInput = document.getElementById("startDate");
            const endDateInput = document.getElementById("endDate");
            const totalFeeSpan = document.getElementById("total-fee-value");
            const finalPriceSpan = document.getElementById("final-price");
            const rentalInsuranceFee = document.getElementById("rental-insurance-fee-value");
            const occupantInsuranceFee = document.getElementById("occupant-insurance-fee-value");
            const occupantInsuranceRow = document.getElementById("occupant-insurance-row");

            const today = new Date().toISOString().split("T")[0]; // Current date in YYYY-MM-DD format

            // Set the default value of both inputs to today's date
            startDateInput.value = today;
            endDateInput.value = today;

            // Function to validate and reset invalid inputs
            function validateInput() {
                const startDateValue = startDateInput.value;
                const endDateValue = endDateInput.value;

                // Check if the start date is in the past
                if (startDateValue < today) {
                    startDateInput.value = today;
                    alert("Start date cannot be in the past. Resetting to today's date.");
                }

                // Check if the end date is in the past
                if (endDateValue < today) {
                    endDateInput.value = today;
                    alert("End date cannot be in the past. Resetting to today's date.");
                }

                // Check if the end date is earlier than the start date
                if (endDateValue < startDateInput.value) {
                    endDateInput.value = startDateInput.value;
                    alert("End date cannot be before the start date. Resetting to match the start date.");
                }

                updateDaysDifference(); // Update the number of days difference if inputs are valid
            }

            // Function to calculate and display the difference in days
            function updateDaysDifference() {
                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);

                const timeDiff = endDate - startDate; // Difference in milliseconds
                const daysDiff = timeDiff / (1000 * 60 * 60 * 24) + 1; // Convert to days

                if (daysDiff > 100) {
                    alert("You cannot book the car for more than 100 days.");
                    totalFeeSpan.textContent = ""; // Clear the message
                } else {
                    let totalFee = daysDiff * apiData.feePerDay;
                    let finalPrice = totalFee + 5; // Add fixed rental insurance fee

                    totalFeeSpan.textContent = `${totalFee.toLocaleString()} ₫ x ${daysDiff} days`;
                    finalPriceSpan.textContent = `${finalPrice.toLocaleString()} ₫`;

                    // Update hidden inputs to pass to the server
                    document.getElementById("totalFeeInput").value = totalFee;
                }
            }

            // Event listener for the checkbox
            const additionalInsuranceCheck = document.getElementById("additionalInsuranceCheck");
            additionalInsuranceCheck.addEventListener("change", function () {
                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);
                const timeDiff = endDate - startDate;
                const daysDiff = timeDiff / (1000 * 60 * 60 * 24) + 1;
                let insuranceFeePerDay = 2;
                let occupantInsuranceFeeValue = daysDiff * insuranceFeePerDay;

                if (this.checked) {
                    occupantInsuranceRow.style.display = "flex";
                    occupantInsuranceFee.textContent = `${occupantInsuranceFeeValue.toLocaleString()} ₫`;
                    // Recalculate the final price
                    let currentFinalPrice = parseFloat(finalPriceSpan.textContent.replace(/[^0-9.-]+/g, ""));
                    let newFinalPrice = currentFinalPrice + occupantInsuranceFeeValue;
                    finalPriceSpan.textContent = `${newFinalPrice.toLocaleString()} ₫`;
                } else {
                    occupantInsuranceRow.style.display = "none";
                    // Recalculate the final price
                    let currentFinalPrice = parseFloat(finalPriceSpan.textContent.replace(/[^0-9.-]+/g, ""));
                    let newFinalPrice = currentFinalPrice - occupantInsuranceFeeValue;
                    finalPriceSpan.textContent = `${newFinalPrice.toLocaleString()} ₫`;
                }
            });

            // Attach event listeners to both inputs
            startDateInput.addEventListener("change", validateInput);
            endDateInput.addEventListener("change", validateInput);
        });

</script>
}